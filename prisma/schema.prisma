// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    output          = "../src/generated/prisma"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

// Demo table for API endpoints
model Fruit {
    id          Int      @id @default(autoincrement())
    name        String
    color       String
    price       Float
    description String?
    inStock     Boolean  @default(true) @map("in_stock")
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")

    @@map("fruits")
}

// Drama Afera registration system
model ZapisyUser {
    id        Int      @id @default(autoincrement())
    username  String   @unique
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    
    responses ZapisyResponse[]

    @@map("zapisy_users")
}

model ZapisySession {
    id          Int      @id @default(autoincrement())
    date        DateTime @unique
    description String?
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")
    
    responses ZapisyResponse[]

    @@map("zapisy_sessions")
}

model ZapisyResponse {
    id        Int          @id @default(autoincrement())
    userId    Int          @map("user_id")
    sessionId Int          @map("session_id")
    attending Boolean      @default(false)
    createdAt DateTime     @default(now()) @map("created_at")
    updatedAt DateTime     @updatedAt @map("updated_at")
    
    user    ZapisyUser    @relation(fields: [userId], references: [id], onDelete: Cascade)
    session ZapisySession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

    @@unique([userId, sessionId])
    @@map("zapisy_responses")
}
